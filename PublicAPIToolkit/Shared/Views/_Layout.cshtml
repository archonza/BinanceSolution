<!DOCTYPE html>
<html>
@model PublicAPIToolkit.Login.Models.LoginInputModel
<head>
   <meta charset="utf-8" />
   <meta name="viewport" content="width=device-width" />
   <title>@ViewBag.Title</title>
   @Styles.Render("~/Content/css")
   @Scripts.Render("~/bundles/modernizr")
</head>
<body>
   @{
      var loginViewModel = ViewData["LoginViewModel"] as PublicAPIToolkit.Login.Models.LoginViewModel;
   }
   <div class="navbar navbar-inverse navbar-fixed-top">
      <div class="container">
         <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
               <span class="icon-bar"></span>
               <span class="icon-bar"></span>
               <span class="icon-bar"></span>
            </button>
         </div>
         <div class="navbar-collapse collapse">
            <ul class="nav navbar-nav">
               <li>@Html.ActionLink("Home", "Index", "Home", new { area = "" }, null)</li>
               <li>@Html.ActionLink("API", "Index", "Help", new { area = "" }, null)</li>
            </ul>

            <ul class="nav navbar-nav navbar-right">
               <li style="vertical-align:middle">
                  <table>

                     <colgroup>
                        <col span="3" style="column-gap: 5px" />
                     </colgroup>
                     <tr>
                        @{
                           if (loginViewModel.LoggedIn == false)
                           {
                              <th style="color:darkgray; font-size: 10px">Username</th>
                              <th style="color:darkgray; font-size: 10px; padding-left: 5px">Password</th>
                           }
                           else
                           {
                              <th style="color:darkgray; font-size: 10px; visibility: hidden;">Username</th>
                                       <th style="color:darkgray; font-size: 10px; visibility: hidden; padding-left: 5px">Password</th>
                           }
                        }
                        <th></th>
                     </tr>
                     <tr>
                        @{
                           if (loginViewModel.LoggedIn == false)
                           {
                              <!--<td><input type="text" id="UserName" name="UserName" value="" required style="font-size: 12px; width: 100px"></td>-->
                              using (Html.BeginForm("Login", "Login", FormMethod.Post))
                              {
                                 <td><input type="text" id="UserName" name="UserName" value="" required style="font-size: 12px; width: 100px"></td>
                                 <td style="padding-left: 5px"><input type="password" name="Password" required style="font-size: 12px; width: 100px"></td>
                                 }
                              }
                              else
                              {
                              <td style="visibility: hidden;"><input type="text" name="UserName" required style="font-size: 12px; width: 100px"></td>
                              <td style="padding-left: 5px; visibility: hidden;"><input type="password" name="Password" required style="font-size: 12px; width: 100px"></td>
                              }
                           }
                     </tr>
                  </table>
                  &nbsp;
               </li>
               @{
                     if (loginViewModel.LoggedIn == false)
                     {
                        using (Html.BeginForm("Index", "Login", FormMethod.Post))
                        {
                            <li>@Html.ActionLink("Login", "Index", "Login", new { UserName = Request.QueryString["model.UserName"] }, null)</li>
                            <li>@Html.ActionLink("Register", "Index", "Registration", new { area = "" }, null)</li>
                        }
                     }
                     else
                     {
                        <li>@Html.ActionLink("Logout", "Logout", "Login", new { area = "" }, null)</li>
                     }
                  }
            </ul>
         </div>
      </div>
   </div>
   <div class="container body-content">
      @RenderBody()
      <hr />
      <footer>
         <p>&copy; @DateTime.Now.Year - Binance Public API Toolkit</p>
      </footer>
   </div>

   @Scripts.Render("~/bundles/jquery")
   @Scripts.Render("~/bundles/bootstrap")
   @RenderSection("scripts", required: false)
</body>
</html>
